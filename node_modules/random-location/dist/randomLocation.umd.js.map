{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap db796ff08405779ed3c3","webpack:///./src/index.js"],"names":["EARTH_RADIUS","DEG_TO_RAD","Math","PI","THREE_PI","TWO_PI","toRadians","deg","toDegrees","rad","randomCircumferencePoint","centerPoint","radius","sinLat","sin","latitude","cosLat","cos","bearing","random","sinBearing","cosBearing","theta","sinTheta","cosTheta","rLatitude","rLongitude","asin","longitude","atan2","randomCirclePoint","sqrt","distance","P1","P2","rP1","rP2","D","A","C","haversine","module","exports"],"mappings":"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","file":"randomLocation.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"randomLocation\"] = factory();\n\telse\n\t\troot[\"randomLocation\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap db796ff08405779ed3c3","const EARTH_RADIUS = 6371000 // meters\nconst DEG_TO_RAD = Math.PI / 180.0\nconst THREE_PI = Math.PI * 3\nconst TWO_PI = Math.PI * 2\n\nconst toRadians = deg => deg * DEG_TO_RAD\nconst toDegrees = rad => rad / DEG_TO_RAD\n\n/*\nGiven a centerPoint C and a radius R, returns a random point that is on the\ncircumference defined by C and R.\n\ncenterPoint C is of type { latitude: A, longitude: B }\nWhere -90 <= A <= 90 and -180 <= B <= 180.\n\nradius R is in meters.\n\nBased on: http://www.movable-type.co.uk/scripts/latlong.html#destPoint\n*/\nconst randomCircumferencePoint = (centerPoint, radius) => {\n  const sinLat = Math.sin(toRadians(centerPoint.latitude))\n  const cosLat = Math.cos(toRadians(centerPoint.latitude))\n\n  // Random bearing (direction out 360 degrees)\n  const bearing = Math.random() * TWO_PI\n  const sinBearing = Math.sin(bearing)\n  const cosBearing = Math.cos(bearing)\n\n  // Theta is the approximated angular distance\n  const theta = radius / EARTH_RADIUS\n  const sinTheta = Math.sin(theta)\n  const cosTheta = Math.cos(theta)\n\n  let rLatitude, rLongitude\n  rLatitude = Math.asin(sinLat * cosTheta + cosLat * sinTheta * cosBearing)\n\n  rLongitude =\n    toRadians(centerPoint.longitude) +\n    Math.atan2(\n      sinBearing * sinTheta * cosLat,\n      cosTheta - sinLat * Math.sin(rLatitude)\n    )\n\n  // Normalize longitude L such that -PI < L < +PI\n  rLongitude = (rLongitude + THREE_PI) % TWO_PI - Math.PI\n\n  return { latitude: toDegrees(rLatitude), longitude: toDegrees(rLongitude) }\n}\n\n/*\nGiven a centerPoint C and a radius R, returns a random point that is inside\nthe circle defined by C and R.\n\ncenterPoint C is of type { latitude: A, longitude: B }\nWhere -90 <= A <= 90 and -180 <= B <= 180.\n\nradius R is in meters.\n*/\nconst randomCirclePoint = (centerPoint, radius) => {\n  // http://mathworld.wolfram.com/DiskPointPicking.html\n  return randomCircumferencePoint(\n    centerPoint,\n    Math.sqrt(Math.random()) * radius\n  )\n}\n\n/*\nReturns the distance in meters between two points P1 and P2. \n\nP1 and P2 are of type { latitude: A, longitude: B }\nWhere -90 <= A <= 90 and -180 <= B <= 180.\n\nBasically it is the Haversine distance function.\nBased on: http://www.movable-type.co.uk/scripts/latlong.html\n*/\nconst distance = (P1, P2) => {\n  const rP1 = {\n    latitude: toRadians(P1.latitude),\n    longitude: toRadians(P1.longitude),\n  }\n  const rP2 = {\n    latitude: toRadians(P2.latitude),\n    longitude: toRadians(P2.longitude),\n  }\n\n  const D = {\n    latitude: Math.sin((rP2.latitude - rP1.latitude) / 2),\n    longitude: Math.sin((rP2.longitude - rP1.longitude) / 2),\n  }\n\n  const A =\n    D.latitude * D.latitude +\n    D.longitude * D.longitude * Math.cos(rP1.latitude) * Math.cos(rP2.latitude)\n\n  const C = 2 * Math.atan2(Math.sqrt(A), Math.sqrt(1 - A))\n\n  return EARTH_RADIUS * C\n}\n\nconst haversine = distance\n\nmodule.exports = {\n  distance,\n  haversine,\n  randomCircumferencePoint,\n  randomCirclePoint,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}